<?php
/**
* SLDirect
* Directorio de Empresas, Servicios y Demandas
* ----------------------------------------------------------------------------------
* Copyright  (C) 2008-2009 CENATIC, Centro Nacional
*                          de Referencia en TICs de
*                          Fuentes Abiertas.
* ----------------------------------------------------------------------------------
*
* This file is part of SLDirect
*
* SLDirect is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; version 2 of the License.
*
* SLDirect is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with bbPress; if not, write to the Free Software
* Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*
* ----------------------------------------------------------------------------------
*
* @copyright 2008-2009 CENATIC
* @license   http://www.gnu.org/licenses/gpl.txt GNU General Public License v2
* @link      http://www.cenatic.es
*
**/

/* File Auto-generated by Webalianza CodeGen 0.1 <luis@webalianza.com> on 2008-09-12 07:10 */
require_once("models/organizacion.model.php");
require_once("models/capacidad.model.php");
require_once("models/sector.model.php");

class capacidadOfertaOrganizacion extends model {

	var $id;
	var $capacidad_id;
	var $organizacion_id;
	var $sector_id;
	var $recursos;
	var $porcentajeFacturacion;
	var $puntuacion;

	function __construct(){
		$this->setRelativeTable("capacidades_ofertas_organizaciones");
		$this->Foreign("organizacion_id","organizacion","");
		$this->Foreign("capacidad_id","capacidad","");
		$this->Foreign("sector_id","sector","");
	}

	function parseValidation(){
		$error_fields = array();;
		if ($this->capacidad_id == '') $this->capacidad_id = 0;
		if (is_numeric($this->capacidad_id)){
			if ($this->capacidad_id != (int)$this->capacidad_id)
				$error_fields[]="capacidad_id";
		}else{
			$error_fields[]="capacidad_id";}
		if ($this->organizacion_id == '') $this->organizacion_id = 0;
		if (is_numeric($this->organizacion_id)){
			if ($this->organizacion_id != (int)$this->organizacion_id)
				$error_fields[]="organizacion_id";
		}else{
			$error_fields[]="organizacion_id";}
		if ($this->sector_id == '') $this->sector_id = 0;
		if (is_numeric($this->sector_id)){
			if ($this->sector_id != (int)$this->sector_id)
				$error_fields[]="sector_id";
		}else{
			$error_fields[]="sector_id";}
		if ($this->recursos == '') $this->recursos = 0;
		if (is_numeric($this->recursos)){
			if ($this->recursos != (int)$this->recursos)
				$error_fields[]="recursos";
		}else{
			$error_fields[]="recursos";}
		if ($this->porcentajeFacturacion == '') $this->porcentajeFacturacion = 0;
		if (is_numeric($this->porcentajeFacturacion)){
			if ($this->porcentajeFacturacion != (int)$this->porcentajeFacturacion)
				$error_fields[]="porcentajeFacturacion";
		}else{
			$error_fields[]="porcentajeFacturacion";}
		if ($this->puntuacion == '') $this->puntuacion = 0;
		if (is_numeric($this->puntuacion)){
			if ($this->puntuacion != (int)$this->puntuacion)
				$error_fields[]="puntuacion";
		}else{
			$error_fields[]="puntuacion";}
		$organizacion_check = new organizacion();
		$organizacion_check->open($this->organizacion_id);
		if ($organizacion_check->id != $this->organizacion_id) $error_fields[]="organizacion_id";
		$capacidad_check = new capacidad();
		$capacidad_check->open($this->capacidad_id);
		if ($capacidad_check->id != $this->capacidad_id) $error_fields[]="capacidad_id";
		$sector_check = new sector();
		$sector_check->open($this->sector_id);
		if ($sector_check->id != $this->sector_id) $error_fields[]="sector_id";

		if (count($error_fields) >0) throw new InvalidModelException(implode(',',$error_fields));
	}

	function onInsert(){
		$this->parseValidation();
	}

	function onUpdate(){
		$this->parseValidation();
	}
	
	function afterInsert () {
		$this->pushToServer ();
	}
	function afterUpdate () {
		$this->pushToServer ();
	}
	function afterDelete () {
		$this->pushToServer ();
	}
	function pushToServer () {
		$organizacion = new organizacion ();
		$organizacion->open (is_object($this->organizacion_id) ? $this->organizacion_id->id : $this->organizacion_id);
		$organizacion->pushToServer ();
	}
}


/*
---BEGIN GENTAG---
YTo1OntzOjI6ImRiIjtzOjc6ImNlbmF0aWMiO3M6NToidGFibGUiO3M6MzQ6ImNhcGFjaWRhZGVzX29mZXJ0YXNfb3JnYW5pemFj
aW9uZXMiO3M6NToiY2xhc3MiO3M6Mjc6ImNhcGFjaWRhZE9mZXJ0YU9yZ2FuaXphY2lvbiI7czo4OiJjaGlsZHJlbiI7YTo2Ontp
OjA7YToyOntzOjU6Im1vZGVsIjtzOjA6IiI7czozOiJrZXkiO3M6MDoiIjt9aToxO2E6Mjp7czo1OiJtb2RlbCI7czowOiIiO3M6
Mzoia2V5IjtzOjA6IiI7fWk6MjthOjI6e3M6NToibW9kZWwiO3M6MDoiIjtzOjM6ImtleSI7czowOiIiO31pOjM7YToyOntzOjU6
Im1vZGVsIjtzOjA6IiI7czozOiJrZXkiO3M6MDoiIjt9aTo0O2E6Mjp7czo1OiJtb2RlbCI7czowOiIiO3M6Mzoia2V5IjtzOjA6
IiI7fWk6NTthOjI6e3M6NToibW9kZWwiO3M6MDoiIjtzOjM6ImtleSI7czowOiIiO319czoyOiJmayI7YTo2OntpOjA7YTozOntz
OjU6ImZpZWxkIjtzOjE1OiJvcmdhbml6YWNpb25faWQiO3M6NToibW9kZWwiO3M6MTI6Im9yZ2FuaXphY2lvbiI7czo3OiJjYXB0
aW9uIjtzOjA6IiI7fWk6MTthOjM6e3M6NToiZmllbGQiO3M6MTI6ImNhcGFjaWRhZF9pZCI7czo1OiJtb2RlbCI7czo5OiJjYXBh
Y2lkYWQiO3M6NzoiY2FwdGlvbiI7czowOiIiO31pOjI7YTozOntzOjU6ImZpZWxkIjtzOjk6InNlY3Rvcl9pZCI7czo1OiJtb2Rl
bCI7czo2OiJzZWN0b3IiO3M6NzoiY2FwdGlvbiI7czowOiIiO31pOjM7YTozOntzOjU6ImZpZWxkIjtzOjA6IiI7czo1OiJtb2Rl
bCI7czowOiIiO3M6NzoiY2FwdGlvbiI7czowOiIiO31pOjQ7YTozOntzOjU6ImZpZWxkIjtzOjA6IiI7czo1OiJtb2RlbCI7czow
OiIiO3M6NzoiY2FwdGlvbiI7czowOiIiO31pOjU7YTozOntzOjU6ImZpZWxkIjtzOjA6IiI7czo1OiJtb2RlbCI7czowOiIiO3M6
NzoiY2FwdGlvbiI7czowOiIiO319fQ==
---END GENTAG---
*/
